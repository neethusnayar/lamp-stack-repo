- name: "Package Installation on Webserver"
  yum:
    name: "{{ webserver_packages }}"
    state: present


- name: "Creating Configuration File From Template"
  template:
    src: httpd.conf.j2
    dest: /etc/httpd/conf/httpd.conf

- name: "Creating VirtualHost From Template"
  template:
    src: virtualhost.conf.j2
    dest: /etc/httpd/conf.d/default.conf


- name: "Creating DocumentRoot For {{ httpd_servername }}"
  file:
    path: "{{ httpd_docroot }}"
    state: directory
    owner: "{{ httpd_owner }}"
    group: "{{ httpd_group }}"

- name: "Creating phpinfo page"
  copy:
    src: test.php
    dest: "{{ httpd_docroot }}"
    owner: "{{ httpd_owner }}"
    group: "{{ httpd_group }}"

- name: "Restarting Services HTTPD and PHP"
  service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  with_items:
    - httpd
    - php-fpm

- name: "mariadb-server - packages installation"
  yum:
    name: mariadb105-server,python3-pip
    state: present

- name: "mariadb-server - restart service"
  service:
    name: mariadb
    state: restarted
    enabled: true


- name: "mariadb-server - install python mysql extension"
  pip:
    name: "PyMySQL"
    state: present


- name: "mariadb-server - Setting Root Password"
  ignore_errors: true
  community.mysql.mysql_user:
    login_user: "root"
    login_password: ""
    login_unix_socket: /var/lib/mysql/mysql.sock
    user: "root"
    password: "{{ mariadb_root_password }}"

- name: "mariadb-server - Removing Anonymous Users"
  community.mysql.mysql_user:
    login_user: "root"
    login_password: "{{ mariadb_root_password }}"
    user: ""
    state: absent


- name: "mariadb-server - Removing test database"
  community.mysql.mysql_db:
    login_user: "root"
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: /var/lib/mysql/mysql.sock
    name: "test"
    state: absent

- name: "mariadb-server - Creating Database {{ mariadb_extra_db }}"
  community.mysql.mysql_db:
    login_user: "root"
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: /var/lib/mysql/mysql.sock
    name: "{{ mariadb_extra_db }}"
    state: present

- name: "mariadb-server - Creating User {{ mariadb_extra_user }}"
  community.mysql.mysql_user:
    login_user: "root"
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: /var/lib/mysql/mysql.sock
    user: "{{ mariadb_extra_user }}"
    password: "{{ mariadb_extra_password }}"
    state: present
    priv: "{{ mariadb_extra_db }}.*:ALL"
